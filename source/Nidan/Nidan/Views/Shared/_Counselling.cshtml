@using Nidan.Extensions
@model Nidan.Models.CounsellingViewModel
<div class="form-control-required-example"> = Required</div>

@Html.HiddenFor(m => m.Counselling.CounsellingId)
@Html.HiddenFor(m => m.Counselling.EnquiryId)


<div class="form-group">
    @Html.LabelFor(model => model.Counselling.CourseOfferedId, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.Counselling.CourseOfferedId, Model.Courses, "Select Course", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Counselling.CourseOfferedId, "", new { @class = "help-block" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Counselling.PreferTiming, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.TextBoxFor(model => model.Counselling.PreferTiming, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.Counselling.PreferTiming, "", new { @class = "help-block" })
    </div>
</div>
<div class="form-group">
    <label class="control-label col-md-3 col-sm-3 col-xs-12">Psychomatric Test Done</label>
    <div class="col-md-6 col-sm-6 col-xs-12">
        <div id="psychomatricTest" class="btn-group" data-toggle="buttons">
            <label id="psychomatricTestYes" class='@(Model.Counselling.PsychomatricTest == "Yes" ? "btn btn-primary active" : "btn btn-default")' data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
                @Html.RadioButtonFor(model => model.Counselling.PsychomatricTest, "Yes")
                <input type="radio" name="psychomatricTest" value="Yes" data-parsley-multiple="gender"> &nbsp; Yes &nbsp;
            </label>
            <label id="psychomatricTestNo" class='@(Model.Counselling.PsychomatricTest == "No" ? "btn btn-primary active" : "btn btn-default")' data-toggle-class="btn-primary" data-toggle-passive-class="btn-default">
                @Html.RadioButtonFor(model => model.Counselling.PsychomatricTest, "No")
                <input type="radio" name="psychomatricTest" value="No" data-parsley-multiple="gender"> No
            </label>
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Counselling.ConversionProspect, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.DropDownListFor(model => model.Counselling.ConversionProspect, Model.ConversionProspectList, null, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Counselling.ConversionProspect, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Counselling.Remarks, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.EditorFor(model => model.Counselling.Remarks, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.Counselling.Remarks, "", new { @class = "help-block" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Counselling.RemarkByBranchManager, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
    <div class="col-md-6 col-sm-6 col-xs-12">
        @Html.EditorFor(model => model.Counselling.RemarkByBranchManager, new { @class = "form-control col-md-7 col-xs-12" })
        @Html.ValidationMessageFor(model => model.Counselling.RemarkByBranchManager, "", new { @class = "help-block" })
    </div>
</div>
