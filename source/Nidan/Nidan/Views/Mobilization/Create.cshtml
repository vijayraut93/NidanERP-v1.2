@using System.Linq
@model Nidan.Models.MobilizationViewModel
@{
    ViewBag.Title = "Create Mobilization";
}
<div class="row">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Create Mobilization <small></small></h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content">
                @using (Html.BeginForm())
                {
                    @Html.HiddenFor(model => model.Mobilization.EventId)
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @if (ViewContext.ViewData.ModelState.Any(x => x.Key == ""))
                        {
                            <div class="row">
                                <div class="col-md-6 col-sm-12 col-xs-12 col-md-offset-3">
                                    @Html.ValidationSummary(false, null, new { @class = "row alert alert-error" })
                                </div>
                            </div>
                        }
                        @Html.Partial("_Mobilization", Model)
                        <div class="col-md-6 col-sm-12 col-xs-12 col-md-offset-3">
                            <div class="form-group">
                                <div class="pull-right">
                                    <button type="submit" class="btn btn-success">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div>
    <a href="@Url.Action("Index")" class="btn btn-primary" role="button">
        <span class="fa fa-chevron-left"></span>&nbsp;Back to list
    </a>
</div>
@section scripts {
    <script>
        //Submit Button Blur after Click
        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', true);
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });
        $('#Mobilization_Mobile').val("");
        $('#publicHolidayErrorSummary').hide();
        var daterangepickerOptions = {
            autoApply: true,
            singleDatePicker: true,
            showDropdowns: true,
            showCustomRangeLabel: false,
            opens: 'left',
            minDate: moment().subtract('2', 'days').format('DD MMMM YYYY'),
            maxDate: moment().format('DD MMMM YYYY'),
            onSelect: function() {
                selectedDate = moment().format('DD MMMM YYYY');
            },
            locale: {
                "format": "DD MMMM YYYY"
            }
        };

        var followUpDaterangepickerOptions = {
            autoApply: true,
            singleDatePicker: true,
            showDropdowns: true,
            showCustomRangeLabel: false,
            opens: 'left',
            minDate: moment(),
            //maxDate: moment().add('2', 'days').format('DD MMMM YYYY'),
            onSelect: function() {
                selectedDate = moment().format('DD MMMM YYYY');
            },
            locale: {
                "format": "DD MMMM YYYY"
            }
        };

        $(function() {
            $('.name')
                .keypress(function(e) {
                    var txt = String.fromCharCode(e.which);
                    console.log(txt + ' : ' + e.which);
                    if (!txt.match(/[A-Za-z+#.]/)) //+#-.
                    {
                        return false;
                    }
                });
        });


        jQuery(function() {
            //Generated date.
            jQuery(".generated").daterangepicker(daterangepickerOptions);
            $('#Mobilization_GeneratedDate').val(moment().format('DD MMMM YYYY'));
            $(".generated")
                .on('apply.daterangepicker',
                    function(ev, picker) {
                        $(this).val(picker.startDate.format('DD MMMM YYYY'));
                    });

            //Follow Up Date
            jQuery(".followUpDate").daterangepicker(followUpDaterangepickerOptions);
            $('#Mobilization_FollowUpDate').val(moment().add('2', 'days').format('DD MMMM YYYY'));
            $(".followUpDate")
                .on('apply.daterangepicker',
                    function(ev, picker) {
                        $(this).val(picker.startDate.format('DD MMMM YYYY'));
                    });
        });

        //var newOption = "Others";
        //$("#Mobilization_InterestedCourseId").append($("<option></option>").val(0).html(newOption));
           


        function phoneno() {
            $('#phone')
                .keypress(function(e) {
                    var a = [];
                    var k = e.which;

                    for (i = 48; i < 58; i++)
                        a.push(i);

                    if (!(a.indexOf(k) >= 0))
                        e.preventDefault();
                });
        }

        $('.eventId').hide();
        $("#Mobilization_MobilizationTypeId")
            .change(function() {
                if ($('#Mobilization_MobilizationTypeId :selected').text() == "Event") {
                    $('.eventId').show();
                } else {
                    $('.eventId').hide();
                }
            });

        $('.interestedCourseId').hide();
        $("#Mobilization_InterestedCourseId")
            .change(function() {
                if ($('#Mobilization_InterestedCourseId :selected').text() == "Others") {
                    $('.interestedCourseId').show();
                } else {
                    $('.interestedCourseId').hide();
                }
            });
    </script>
}